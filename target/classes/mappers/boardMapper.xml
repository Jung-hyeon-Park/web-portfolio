<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTO Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.zerock.mapper.BoardMapper">

<!-- 인기 리뷰 게시글 조회 -->
	<select id="selectTopReview" resultType="SimpleBoardDTO">
		SELECT  b.title, f.full_name, b.post_category_idx, b.idx
		FROM nomination n, board b, file_list f
		where n.write_date > date_add(now(), INTERVAL -7 day)
		and b.idx = n.board_idx
        and f.board_idx = b.idx
		and (b.post_category_idx = 6 or b.post_category_idx = 7 or b.post_category_idx = 8)
		GROUP BY n.board_idx
		ORDER BY b.like_count, b.idx DESC limit 7
	</select>

<!-- 뉴스 이미지 -->
	<select id="selectNews" resultType="SimpleBoardDTO">
		select f.full_name, b.title, b.idx
		from file_list f, board b
		where b.post_category_idx = 4 and f.board_idx = b.idx
		order by f.date desc limit 2
	</select>


<!-- 게시판 리스트 -->
	<select id="selectPost" resultType="PostVO">
		<![CDATA[
		SELECT * FROM post_category
		where idx < 6
		order by idx desc;
		]]>
	</select>
	
<!-- 게시판 리스트2 -->
	<select id="selectPost2" resultType="PostVO">
		<![CDATA[
		SELECT * FROM post_category
		where idx > 5 and idx < 9
		order by idx asc;
		]]>
	</select>
	
<!-- 게시판 리스트3 -->
	<select id="selectPost3" resultType="PostVO">
		<![CDATA[
		SELECT * FROM post_category
		where idx > 8 and idx < 11
		order by idx asc;
		]]>
	</select>

<!-- 게시글 작성 -->
	<insert id="insertBoard">
		INSERT INTO board (title, content, user_idx, post_category_idx, email)
		VALUES (#{title}, #{content}, #{userIdx}, #{postCategoryIdx}, #{email})
		<selectKey resultType="int">
			SELECT LAST_INSERT_ID()
		</selectKey>
	</insert>

<!-- 게시글 세부내용 -->
	<select id="readBoard" resultType="BoardVO">
		SELECT u.email, b.idx, b.title, b.write_date, b.view_count, b.content, b.post_category_idx, b.email, b.like_count
		from user u, board b
		where u.idx = b.user_idx and b.idx = #{idx}
	</select>
	
<!-- 게시글 수정 -->
	<update id="updateBoard">
		update board set title = #{title}, content = #{content}
		where idx = #{idx}
	</update>

<!-- 게시글 삭제 -->
	<delete id="deleteBoard">
		delete from board where idx = #{idx};
	</delete>
	
<!-- 게시글 조회수 -->
	<update id="viewCount">
		update board set view_count = view_count + 1
		where idx = #{idx}
	</update>
	
	<select id="listCriteria" resultType="BoardVO">
		<![CDATA[
		SELECT u.email, b.idx, b.title, b.write_date, b.view_count, b.content, b.post_category_idx,
			(SELECT COUNT(*) FROM comment where board_idx = b.idx) AS recnt
		from user u, board b
		where u.idx = b.user_idx and b.post_category_idx = #{postCategoryIdx} 
		order by b.idx desc
		limit #{pageStart}, #{perPageNum}
		]]>
	</select>
	
	<select id="countPaging" resultType="int">
		<![CDATA[
		SELECT count(b.idx)
		from user u, board b
		where u.idx = b.user_idx and b.post_category_idx = #{postCategoryIdx}
		]]>
	</select>
	
	<select id="listSearch" resultType="BoardVO">
		SELECT u.email, b.idx, b.title, b.write_date, b.view_count, b.content, b.post_category_idx,
			(SELECT COUNT(*) FROM comment where board_idx = b.idx) AS recnt
		from user u, board b
		where u.idx = b.user_idx
		and b.post_category_idx = #{postCategoryIdx}
		and ${searchType} like CONCAT('%', #{keyword}, '%')
		order by b.idx desc
		limit #{pageStart}, #{perPageNum}
	</select>
	
	<select id="listSearchCount" resultType="int">
		SELECT count(b.idx)
		from user u, board b
		where u.idx = b.user_idx and b.post_category_idx = #{postCategoryIdx} and ${searchType} like CONCAT('%', #{keyword}, '%')
	</select>	
	
<!-- 파일 추가 -->
	<insert id="addFiles">
		insert into file_list(full_name, board_idx)
		values (#{fileName}, LAST_INSERT_ID())
	</insert>
	
<!-- 파일 삭제 -->
	<delete id="deleteFiles">
		delete from file_list
		where board_idx = #{boardIdx}
	</delete>

<!-- 파일 수정 -->
	<update id="replaceFiles">
		insert into file_list(full_name, board_idx)
		values (#{fullName}, #{boardIdx})
	</update>
	
<!-- 파일 조회 -->
	<select id="getFiles" resultType="String">
		select full_name from file_list
		where board_idx = #{boardIdx}
		order by date
	</select>
	
<!-- 리뷰 게시글 추가 -->
	<insert id="insertReview">
		insert into review (grade, board_idx, category2_idx)
		values (#{grade}, LAST_INSERT_ID(), #{category2Idx});
	</insert>
	
<!-- 리뷰 조회 -->
	<select id="selectReview" resultType="ReviewDTO">
		SELECT c2.name2, r.grade FROM review r, category2 c2
		where c2.idx = r.category2_idx and r.board_idx = #{boardIdx}
	</select>
	
<!-- 리뷰 수정 -->	
	<update id="updateReview">
		UPDATE review SET grade = #{grade}, category2_idx = #{category2Idx}
		WHERE board_idx = #{boardIdx}
	</update>
	
<!-- 리뷰 삭제 -->
	<delete id="deleteReview">
		delete from review where board_idx = #{boardIdx}
	</delete>

<!-- 게시글 추천 -->
	<insert id="insertNomination">
		INSERT INTO nomination (board_idx, user_idx)
		values (#{boardIdx}, #{userIdx})
	</insert>
	
<!-- 추천 조회 -->
	<select id="selectNomination" resultType="int">
		SELECT COUNT(*) FROM nomination
		where board_idx = #{boardIdx} AND user_idx = #{userIdx}
	</select>
	
<!-- 개인 추천 삭제 -->
	<delete id="deleteNomination">
		DELETE FROM nomination
		WHERE board_idx = #{boardIdx} 
		<if test="userIdx != null">
			AND user_idx = #{userIdx}
		</if>
	</delete>
	
<!-- 게시글 추천 삭제 -->
	<delete id="deleteBoardNomination">
		DELETE from nomination
		where board_idx = #{idx}
	</delete>
	
<!-- 추천 수정 -->
	<update id="updateNomination">
		UPDATE board SET like_count = (SELECT COUNT(*) FROM nomination
		WHERE board_idx = #{boardIdx})
		WHERE idx = #{boardIdx}
	</update>
	
<!-- 특정 게시글 리스트 카운트 -->
	<select id="countBoard" resultType="int">
		select count(*) from board
		where post_category_idx = #{postCategoryIdx} 
	</select>
	
</mapper>